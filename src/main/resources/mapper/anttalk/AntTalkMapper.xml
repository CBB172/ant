<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.java.boot.anttalk.dao.AntTalkMapper">
  <resultMap id="BaseResultMap" type="com.java.boot.anttalk.entity.AntTalk">
    <constructor>
      <idArg column="talk_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publish_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="author" javaType="java.lang.Short" jdbcType="SMALLINT" />
      <arg column="view_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="approve_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="disapprove_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="isvalid" javaType="java.lang.Byte" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.java.boot.anttalk.entity.AntTalk">
    <constructor>
      <idArg column="talk_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publish_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="author" javaType="java.lang.Short" jdbcType="SMALLINT" />
      <arg column="view_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="approve_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="disapprove_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="isvalid" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    talk_id, user_id, publish_time, author, view_count, approve_count, disapprove_count, 
    update_time, isvalid
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.java.boot.anttalk.entity.AntTalkExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ant_talk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.java.boot.anttalk.entity.AntTalkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ant_talk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ant_talk
    where talk_id = #{talkId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ant_talk
    where talk_id = #{talkId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.java.boot.anttalk.entity.AntTalkExample">
    delete from ant_talk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.java.boot.anttalk.entity.AntTalk">
    insert into ant_talk (talk_id, user_id, publish_time, 
      author, view_count, approve_count, 
      disapprove_count, update_time, isvalid, 
      content)
    values (#{talkId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{publishTime,jdbcType=INTEGER}, 
      #{author,jdbcType=SMALLINT}, #{viewCount,jdbcType=INTEGER}, #{approveCount,jdbcType=INTEGER}, 
      #{disapproveCount,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{isvalid,jdbcType=TINYINT}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.java.boot.anttalk.entity.AntTalk">
    insert into ant_talk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="talkId != null">
        talk_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="approveCount != null">
        approve_count,
      </if>
      <if test="disapproveCount != null">
        disapprove_count,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isvalid != null">
        isvalid,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="talkId != null">
        #{talkId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=SMALLINT},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="approveCount != null">
        #{approveCount,jdbcType=INTEGER},
      </if>
      <if test="disapproveCount != null">
        #{disapproveCount,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.java.boot.anttalk.entity.AntTalkExample" resultType="java.lang.Long">
    select count(*) from ant_talk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ant_talk
    <set>
      <if test="record.talkId != null">
        talk_id = #{record.talkId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=INTEGER},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=SMALLINT},
      </if>
      <if test="record.viewCount != null">
        view_count = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.approveCount != null">
        approve_count = #{record.approveCount,jdbcType=INTEGER},
      </if>
      <if test="record.disapproveCount != null">
        disapprove_count = #{record.disapproveCount,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isvalid != null">
        isvalid = #{record.isvalid,jdbcType=TINYINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ant_talk
    set talk_id = #{record.talkId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=INTEGER},
      author = #{record.author,jdbcType=SMALLINT},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      approve_count = #{record.approveCount,jdbcType=INTEGER},
      disapprove_count = #{record.disapproveCount,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      isvalid = #{record.isvalid,jdbcType=TINYINT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ant_talk
    set talk_id = #{record.talkId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=INTEGER},
      author = #{record.author,jdbcType=SMALLINT},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      approve_count = #{record.approveCount,jdbcType=INTEGER},
      disapprove_count = #{record.disapproveCount,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      isvalid = #{record.isvalid,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.java.boot.anttalk.entity.AntTalk">
    update ant_talk
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=SMALLINT},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="approveCount != null">
        approve_count = #{approveCount,jdbcType=INTEGER},
      </if>
      <if test="disapproveCount != null">
        disapprove_count = #{disapproveCount,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isvalid != null">
        isvalid = #{isvalid,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where talk_id = #{talkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.java.boot.anttalk.entity.AntTalk">
    update ant_talk
    set user_id = #{userId,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=INTEGER},
      author = #{author,jdbcType=SMALLINT},
      view_count = #{viewCount,jdbcType=INTEGER},
      approve_count = #{approveCount,jdbcType=INTEGER},
      disapprove_count = #{disapproveCount,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      isvalid = #{isvalid,jdbcType=TINYINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where talk_id = #{talkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.java.boot.anttalk.entity.AntTalk">
    update ant_talk
    set user_id = #{userId,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=INTEGER},
      author = #{author,jdbcType=SMALLINT},
      view_count = #{viewCount,jdbcType=INTEGER},
      approve_count = #{approveCount,jdbcType=INTEGER},
      disapprove_count = #{disapproveCount,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      isvalid = #{isvalid,jdbcType=TINYINT}
    where talk_id = #{talkId,jdbcType=INTEGER}
  </update>
</mapper>